# CPU Optimization Configuration for M4 Max Trading Platform
# This configuration optimizes for high-frequency trading workloads

system:
  # M4 Max chip configuration
  architecture: "Apple M4 Max"
  total_cores: 14
  performance_cores: 12  # Actual M4 Max has 12 P-cores
  efficiency_cores: 4    # Actual M4 Max has 4 E-cores
  
  # Core allocation strategy
  core_allocation:
    trading_engine: [0, 1, 2, 3]      # Dedicate first 4 P-cores to trading
    ml_inference: [4, 5, 6, 7]       # Next 4 P-cores for ML inference
    data_processing: [8, 9, 10, 11]  # Remaining P-cores for data processing
    background_tasks: [12, 13, 14, 15] # E-cores for background work

threading:
  # Threading configuration
  max_workers:
    cpu_bound: 12        # Use P-cores for CPU-intensive tasks
    io_bound: 20         # Higher concurrency for I/O operations
    ml_inference: 8      # Dedicated ML worker pool
  
  # Thread pool settings
  thread_pools:
    high_priority:
      size: 4
      cores: [0, 1, 2, 3]
      priority: -10      # Higher priority (lower nice value)
    
    normal_priority:
      size: 8
      cores: [4, 5, 6, 7, 8, 9, 10, 11]
      priority: 0
    
    background:
      size: 4
      cores: [12, 13, 14, 15]
      priority: 10       # Lower priority

performance:
  # Performance monitoring thresholds
  cpu_usage_warning: 80.0    # Warn if CPU usage > 80%
  cpu_usage_critical: 95.0   # Critical if CPU usage > 95%
  memory_usage_warning: 70.0 # Warn if memory usage > 70%
  memory_usage_critical: 90.0 # Critical if memory usage > 90%
  
  # Load balancing
  load_balancing:
    enabled: true
    rebalance_interval: 5.0  # Seconds
    migration_threshold: 2.0 # Load difference threshold
  
  # Thermal management
  thermal_management:
    enabled: true
    max_temperature: 85.0    # Celsius
    throttle_threshold: 80.0 # Start throttling at 80°C
    recovery_threshold: 75.0 # Resume full speed at 75°C

optimization:
  # Optimization strategies
  strategies:
    - name: "latency_optimized"
      description: "Minimize latency for trading operations"
      settings:
        cpu_affinity: true
        numa_aware: true
        interrupt_coalescing: false
        power_saving: false
    
    - name: "throughput_optimized" 
      description: "Maximize throughput for batch processing"
      settings:
        cpu_affinity: false
        numa_aware: false
        interrupt_coalescing: true
        power_saving: false
    
    - name: "power_efficient"
      description: "Balance performance with power consumption"
      settings:
        cpu_affinity: true
        numa_aware: true
        interrupt_coalescing: true
        power_saving: true

  # Active strategy
  active_strategy: "latency_optimized"

profiling:
  # Performance profiling settings
  enabled: true
  sampling_rate: 1000      # Samples per second
  output_format: "json"
  metrics:
    - cpu_usage
    - memory_usage
    - cache_hit_ratio
    - instruction_throughput
    - branch_prediction_accuracy
  
  # Profiling intervals
  intervals:
    real_time: 0.1         # 100ms for real-time monitoring
    aggregation: 1.0       # 1s for aggregated metrics
    reporting: 60.0        # 1min for detailed reports

logging:
  # Logging configuration for CPU optimization
  level: "INFO"
  format: "structured"
  
  # Log rotation
  rotation:
    max_size: "100MB"
    backup_count: 10
    
  # Performance logging
  performance_logs:
    enabled: true
    log_slow_operations: true
    slow_operation_threshold: 0.001  # 1ms
    
monitoring:
  # Real-time monitoring configuration
  enabled: true
  update_interval: 0.5     # Update every 500ms
  
  # Metrics collection
  metrics:
    system:
      - cpu_usage_per_core
      - memory_usage
      - thermal_state
      - power_consumption
    
    application:
      - thread_pool_utilization
      - task_queue_depth
      - processing_latency
      - error_rates
  
  # Alerting thresholds
  alerts:
    cpu_overload:
      threshold: 90.0
      duration: 10.0       # Sustained for 10 seconds
      action: "throttle"
    
    memory_pressure:
      threshold: 85.0
      duration: 5.0
      action: "gc_force"
    
    thermal_warning:
      threshold: 80.0
      duration: 2.0
      action: "frequency_reduce"

# Grand Central Dispatch Integration
gcd:
  enabled: true
  
  # QoS Classes (macOS specific)
  qos_classes:
    user_interactive: ["trading_engine", "order_management"]
    user_initiated: ["market_data", "risk_management"] 
    default: ["analytics", "reporting"]
    utility: ["data_archival", "maintenance"]
    background: ["cleanup", "logging"]
  
  # Dispatch queue configuration
  dispatch_queues:
    high_frequency_trading:
      type: "concurrent"
      qos: "user_interactive"
      target_queue: "global_high_priority"
    
    market_data_processing:
      type: "concurrent" 
      qos: "user_initiated"
      target_queue: "global_default"
    
    analytics_processing:
      type: "concurrent"
      qos: "default"
      target_queue: "global_default"

# Production-specific settings
production:
  # Production optimizations
  optimizations:
    - disable_debug_logging
    - enable_jit_compilation
    - optimize_memory_allocation
    - enable_cpu_frequency_scaling
  
  # Resource limits
  limits:
    max_cpu_percent: 90.0
    max_memory_percent: 80.0
    max_file_descriptors: 65536
    max_threads: 1000
  
  # Health checks
  health_checks:
    enabled: true
    interval: 30.0         # Check every 30 seconds
    timeout: 5.0           # 5 second timeout
    
    checks:
      - cpu_responsiveness
      - memory_availability  
      - thermal_state
      - thread_pool_health