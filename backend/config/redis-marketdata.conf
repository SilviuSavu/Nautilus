# Redis Configuration for MarketData Bus
# Neural Engine + Unified Memory Highway Optimized
# Target: High-throughput data distribution with aggressive caching

# Basic configuration
bind 0.0.0.0
port 6379
timeout 0
tcp-keepalive 300
tcp-nodelay yes

# Memory optimization for MarketData caching
maxmemory 64gb
maxmemory-policy allkeys-lru
maxmemory-samples 10

# Persistence optimized for data caching
save 60 1000
save 300 100
save 900 10
stop-writes-on-bgsave-error no
rdbcompression yes
rdbchecksum yes
dbfilename marketdata-cache.rdb

# AOF for reliability
appendonly yes
appendfilename "marketdata-cache.aof"
appendfsync everysec
no-appendfsync-on-rewrite no
auto-aof-rewrite-percentage 100
auto-aof-rewrite-min-size 128mb

# Client configuration for high-throughput
maxclients 10000
client-query-buffer-limit 64mb
client-output-buffer-limit normal 0 0 0
client-output-buffer-limit replica 256mb 64mb 60
client-output-buffer-limit pubsub 32mb 8mb 60

# Performance tuning for data distribution
hz 10
dynamic-hz yes
hash-max-ziplist-entries 512
hash-max-ziplist-value 64
list-max-ziplist-size -2
list-compress-depth 0
set-max-intset-entries 512
zset-max-ziplist-entries 128
zset-max-ziplist-value 64

# Neural Engine optimization hints
# These are interpreted by the dual MessageBus client
# marketdata-optimization neural-engine
# unified-memory-pool 64gb
# cache-strategy aggressive-lru
# hardware-acceleration neural-engine