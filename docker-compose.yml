version: '3.8'

services:
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile.dev
    container_name: nautilus-frontend
    ports:
      - "3000:3000"
    volumes:
      - ./frontend:/app
      - /app/node_modules
    environment:
      - NODE_ENV=development
      - VITE_API_BASE_URL=http://localhost:8000
      - VITE_WS_URL=localhost:8000
    depends_on:
      - backend
    networks:
      - nautilus-network

  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile.dev
    container_name: nautilus-backend
    ports:
      - "8000:8000"
    volumes:
      - ./backend:/app
      # - ./nautilus_trader:/app/nautilus_trader:ro  # Commented out to use installed nautilus_trader package
    environment:
      - ENVIRONMENT=development
      - DEBUG=true
      - RELOAD=true
      - HOST=0.0.0.0
      - PORT=8000
      - CORS_ORIGINS=http://localhost:3000,http://localhost:80
      - REDIS_URL=redis://redis:6379
      - REDIS_HOST=redis
      - REDIS_PORT=6379
      - REDIS_DB=0
      - DATABASE_URL=postgresql://nautilus@postgres:5432/nautilus
      # Exchange API Configuration (set these for live trading)
      # Binance (defaults to testnet for safety)
      - BINANCE_API_KEY=${BINANCE_API_KEY:-}
      - BINANCE_API_SECRET=${BINANCE_API_SECRET:-}
      - BINANCE_SANDBOX=${BINANCE_SANDBOX:-true}
      - BINANCE_TRADING_MODE=${BINANCE_TRADING_MODE:-testnet}
      - BINANCE_BASE_URL=${BINANCE_BASE_URL:-https://testnet.binance.vision}
      - BINANCE_WS_URL=${BINANCE_WS_URL:-wss://testnet.binance.vision}
      # Coinbase (defaults to sandbox for safety)
      - COINBASE_API_KEY=${COINBASE_API_KEY:-}
      - COINBASE_API_SECRET=${COINBASE_API_SECRET:-}
      - COINBASE_PASSPHRASE=${COINBASE_PASSPHRASE:-}
      - COINBASE_SANDBOX=${COINBASE_SANDBOX:-true}
      - COINBASE_TRADING_MODE=${COINBASE_TRADING_MODE:-testnet}
      - COINBASE_BASE_URL=${COINBASE_BASE_URL:-https://api-public.sandbox.exchange.coinbase.com}
      # Bybit (defaults to testnet for safety)
      - BYBIT_API_KEY=${BYBIT_API_KEY:-}
      - BYBIT_API_SECRET=${BYBIT_API_SECRET:-}
      - BYBIT_SANDBOX=${BYBIT_SANDBOX:-true}
      - BYBIT_TRADING_MODE=${BYBIT_TRADING_MODE:-testnet}
      - BYBIT_BASE_URL=${BYBIT_BASE_URL:-https://api-testnet.bybit.com}
      # Kraken (paper mode)
      - KRAKEN_API_KEY=${KRAKEN_API_KEY:-}
      - KRAKEN_API_SECRET=${KRAKEN_API_SECRET:-}
      - KRAKEN_TRADING_MODE=${KRAKEN_TRADING_MODE:-paper}
      # OKX (paper mode)
      - OKX_API_KEY=${OKX_API_KEY:-}
      - OKX_API_SECRET=${OKX_API_SECRET:-}
      - OKX_PASSPHRASE=${OKX_PASSPHRASE:-}
      - OKX_TRADING_MODE=${OKX_TRADING_MODE:-paper}
    depends_on:
      - redis
      - postgres
    networks:
      - nautilus-network

  redis:
    image: redis:7-alpine
    container_name: nautilus-redis
    ports:
      - "6379:6379"
    networks:
      - nautilus-network

  postgres:
    image: postgres:15-alpine
    container_name: nautilus-postgres
    environment:
      - POSTGRES_DB=nautilus
      - POSTGRES_USER=nautilus
      - POSTGRES_HOST_AUTH_METHOD=trust
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./schema/sql:/docker-entrypoint-initdb.d
    networks:
      - nautilus-network

  nginx:
    build:
      context: ./nginx
      dockerfile: Dockerfile
    container_name: nautilus-nginx
    ports:
      - "80:80"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
    depends_on:
      - frontend
      - backend
    networks:
      - nautilus-network

networks:
  nautilus-network:
    driver: bridge

volumes:
  node_modules:
  postgres_data: